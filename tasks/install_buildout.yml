---

- name: Install build dependencies
  apt:  pkg={{ item }}
        state=installed
        update_cache={{ odoo_apt_update_cache }}
        cache_valid_time={{ odoo_apt_cache_valid_time }}
  with_items: "{{ odoo_buildout_build_dependencies }}"

- name: Install extra dependencies
  apt:  pkg={{ item }}
        state=installed
        update_cache={{ odoo_apt_update_cache }}
        cache_valid_time={{ odoo_apt_cache_valid_time }}
  with_items: "{{ odoo_buildout_extra_dependencies }}"

- name: Prepare the Python virtual environment
  become: yes
  become_user: "{{ odoo_user }}"
  shell: "{{ odoo_buildout_venv_cmd }}"
  args:
    creates: "{{ odoo_buildout_venv_path }}"

- name: Copy the bootstrap.py script
  copy: src=bootstrap.py dest={{ odoo_buildout_bootstrap_path }}
        owner={{ odoo_user }} group={{ odoo_user }} force=no

- name: Install buildout (run the bootstrap.py script)
  become: yes
  become_user: "{{ odoo_user }}"
  command: "{{ odoo_buildout_bootstrap_cmd }}"
  args:
    creates: "{{ odoo_buildout_bin_path }}"

- name: Run buildout
  become: yes
  become_user: "{{ odoo_user }}"
  command: "{{ odoo_buildout_bin_path }} -c {{ odoo_buildout_config_path }}"
  changed_when: False

- name: Generate Odoo init script
  template: src=odoo-buildout.init dest=/etc/init.d/{{ odoo_service }}
        owner=root group=root mode=0755
        force=yes
        backup=yes
  when: ansible_service_mgr == 'sysvinit'
  notify: Restart Odoo

- name: Generate systemd Odoo service
  template: src=odoo.service dest=/etc/systemd/system
        owner=root group=root mode=0755
        force=yes
        backup=yes
  when: ansible_service_mgr == 'systemd'
  notify: Restart Odoo
