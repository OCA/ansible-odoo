---

- name: Install required tools
  apt:  pkg={{ item }}
        state=present
        update_cache={{ odoo_apt_update_cache }}
        cache_valid_time={{ odoo_apt_cache_valid_time }}
  with_items: "{{ odoo_required_tools }}"
  tags:
    - odoo_required_tools

- name: Add Odoo system user
  user:
    name: "{{ odoo_user }}"
    shell: "{{ odoo_user_shell }}"
    password: "{{ odoo_user_passwd }}"
    update_password: "{{ odoo_user_update_password }}"
    system: "{{ odoo_user_system }}"
  tags:
    - odoo_user

- name: Configure SSH for the Odoo user
  import_tasks: install_ssh.yml
  tags:
    - odoo_install_ssh

- name: Create log directory
  file: path={{ odoo_logdir }}/{{ odoo_service }} state=directory
        owner={{ odoo_user }} group={{ odoo_user }} force=no
  tags:
    - odoo_log

- name: Project repository already cloned?
  stat: path={{ odoo_repo_dest }}
  register: project_path
  tags:
    - odoo_project

- name: Clone project repository (Mercurial)
  become: yes
  become_user: "{{ odoo_user }}"
  hg:   repo={{ odoo_repo_url }}
        dest={{ odoo_repo_dest }}
        revision={{ odoo_repo_rev | string }}
  when: odoo_repo_type == 'hg' and odoo_repo_url
        and (odoo_repo_update or (project_path.stat.exists == False))
  notify: Restart Odoo
  tags:
    - odoo_project

- name: Clone project repository (Git)
  become: yes
  become_user: "{{ odoo_user }}"
  git:  repo={{ odoo_repo_url }}
        dest={{ odoo_repo_dest }}
        version={{ odoo_repo_rev | string }}
        update={{ project_path.stat.exists == False and 'yes'
                  or (odoo_repo_update and 'yes' or 'no') }}
        depth={{ odoo_repo_depth }}
  when: odoo_install_type != 'pip' and odoo_repo_type == 'git' and odoo_repo_url
  notify: Restart Odoo
  tags:
    - odoo_project

- name: Create working dir directory
  file: path={{ odoo_workdir }}/{{ odoo_service }} state=directory
        owner={{ odoo_user }} group={{ odoo_user }} force=yes

- name: Create odoo server directory
  file: path={{ odoo_rootdir }}/{{ odoo_service }}/server state=directory
        owner={{ odoo_user }} group={{ odoo_user }} force=yes
  when: odoo_install_type != 'pip'
  tags:
    - odoo_install_type_standard
    - odoo_install_type_buildout

- name: Create odoo config file directory
  file: path={{ odoo_config_file_dir }}/{{ odoo_service }} state=directory
        owner={{ odoo_user }} group={{ odoo_user }} force=yes
  when: odoo_install_type != 'buildout'
  tags:
    - odoo_install_type_pip
    - odoo_install_type_standard

- name: Create odoo data dir directory
  file: path={{ odoo_config_data_dir }}/{{ odoo_service }} state=directory
        owner={{ odoo_user }} group={{ odoo_user }} force=yes
  when: odoo_install_type != 'buildout'
  tags:
    - odoo_install_type_pip
    - odoo_install_type_standard

- name: Standard installation
  import_tasks: install_standard.yml
  when: odoo_install_type == 'standard'
  tags:
    - odoo_install_type_standard

- name: Buildout installation
  import_tasks: install_buildout.yml
  when: odoo_install_type == 'buildout'
  tags:
    - odoo_install_type_buildout

- name: Pip installation
  import_tasks: install_pip.yml
  when: odoo_install_type == 'pip'
  tags:
    - odoo_install_type_pip

- name: Install NPM packages
  import_tasks: install_npm.yml
  when: (odoo_version | int) >= 9
  tags:
    - odoo
    - odoo_packages
